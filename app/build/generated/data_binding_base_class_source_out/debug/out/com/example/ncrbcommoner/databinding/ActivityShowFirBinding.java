// Generated by view binder compiler. Do not edit!
package com.example.ncrbcommoner.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ncrbcommoner.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityShowFirBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView areaEdit;

  @NonNull
  public final TextView dateEdit;

  @NonNull
  public final TextView emailEdit;

  @NonNull
  public final TextView evidenceEdit;

  @NonNull
  public final TextView nameEdit;

  @NonNull
  public final TextView noEdit;

  @NonNull
  public final TextView statementEdit;

  @NonNull
  public final Button submitBtn;

  @NonNull
  public final TextView suspectEdit;

  @NonNull
  public final TextView timeEdit;

  @NonNull
  public final TextView txtArea;

  @NonNull
  public final TextView txtDate;

  @NonNull
  public final TextView txtEmail;

  @NonNull
  public final TextView txtEvidence;

  @NonNull
  public final TextView txtName;

  @NonNull
  public final TextView txtNo;

  @NonNull
  public final TextView txtStatement;

  @NonNull
  public final TextView txtSuspect;

  @NonNull
  public final TextView txtTime;

  private ActivityShowFirBinding(@NonNull RelativeLayout rootView, @NonNull TextView areaEdit,
      @NonNull TextView dateEdit, @NonNull TextView emailEdit, @NonNull TextView evidenceEdit,
      @NonNull TextView nameEdit, @NonNull TextView noEdit, @NonNull TextView statementEdit,
      @NonNull Button submitBtn, @NonNull TextView suspectEdit, @NonNull TextView timeEdit,
      @NonNull TextView txtArea, @NonNull TextView txtDate, @NonNull TextView txtEmail,
      @NonNull TextView txtEvidence, @NonNull TextView txtName, @NonNull TextView txtNo,
      @NonNull TextView txtStatement, @NonNull TextView txtSuspect, @NonNull TextView txtTime) {
    this.rootView = rootView;
    this.areaEdit = areaEdit;
    this.dateEdit = dateEdit;
    this.emailEdit = emailEdit;
    this.evidenceEdit = evidenceEdit;
    this.nameEdit = nameEdit;
    this.noEdit = noEdit;
    this.statementEdit = statementEdit;
    this.submitBtn = submitBtn;
    this.suspectEdit = suspectEdit;
    this.timeEdit = timeEdit;
    this.txtArea = txtArea;
    this.txtDate = txtDate;
    this.txtEmail = txtEmail;
    this.txtEvidence = txtEvidence;
    this.txtName = txtName;
    this.txtNo = txtNo;
    this.txtStatement = txtStatement;
    this.txtSuspect = txtSuspect;
    this.txtTime = txtTime;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityShowFirBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityShowFirBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_show_fir, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityShowFirBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.area_edit;
      TextView areaEdit = ViewBindings.findChildViewById(rootView, id);
      if (areaEdit == null) {
        break missingId;
      }

      id = R.id.date_edit;
      TextView dateEdit = ViewBindings.findChildViewById(rootView, id);
      if (dateEdit == null) {
        break missingId;
      }

      id = R.id.email_edit;
      TextView emailEdit = ViewBindings.findChildViewById(rootView, id);
      if (emailEdit == null) {
        break missingId;
      }

      id = R.id.evidence_edit;
      TextView evidenceEdit = ViewBindings.findChildViewById(rootView, id);
      if (evidenceEdit == null) {
        break missingId;
      }

      id = R.id.name_edit;
      TextView nameEdit = ViewBindings.findChildViewById(rootView, id);
      if (nameEdit == null) {
        break missingId;
      }

      id = R.id.no_edit;
      TextView noEdit = ViewBindings.findChildViewById(rootView, id);
      if (noEdit == null) {
        break missingId;
      }

      id = R.id.statement_edit;
      TextView statementEdit = ViewBindings.findChildViewById(rootView, id);
      if (statementEdit == null) {
        break missingId;
      }

      id = R.id.submitBtn;
      Button submitBtn = ViewBindings.findChildViewById(rootView, id);
      if (submitBtn == null) {
        break missingId;
      }

      id = R.id.suspect_edit;
      TextView suspectEdit = ViewBindings.findChildViewById(rootView, id);
      if (suspectEdit == null) {
        break missingId;
      }

      id = R.id.time_edit;
      TextView timeEdit = ViewBindings.findChildViewById(rootView, id);
      if (timeEdit == null) {
        break missingId;
      }

      id = R.id.txt_area;
      TextView txtArea = ViewBindings.findChildViewById(rootView, id);
      if (txtArea == null) {
        break missingId;
      }

      id = R.id.txt_date;
      TextView txtDate = ViewBindings.findChildViewById(rootView, id);
      if (txtDate == null) {
        break missingId;
      }

      id = R.id.txt_email;
      TextView txtEmail = ViewBindings.findChildViewById(rootView, id);
      if (txtEmail == null) {
        break missingId;
      }

      id = R.id.txt_evidence;
      TextView txtEvidence = ViewBindings.findChildViewById(rootView, id);
      if (txtEvidence == null) {
        break missingId;
      }

      id = R.id.txt_name;
      TextView txtName = ViewBindings.findChildViewById(rootView, id);
      if (txtName == null) {
        break missingId;
      }

      id = R.id.txt_no;
      TextView txtNo = ViewBindings.findChildViewById(rootView, id);
      if (txtNo == null) {
        break missingId;
      }

      id = R.id.txt_statement;
      TextView txtStatement = ViewBindings.findChildViewById(rootView, id);
      if (txtStatement == null) {
        break missingId;
      }

      id = R.id.txt_suspect;
      TextView txtSuspect = ViewBindings.findChildViewById(rootView, id);
      if (txtSuspect == null) {
        break missingId;
      }

      id = R.id.txt_time;
      TextView txtTime = ViewBindings.findChildViewById(rootView, id);
      if (txtTime == null) {
        break missingId;
      }

      return new ActivityShowFirBinding((RelativeLayout) rootView, areaEdit, dateEdit, emailEdit,
          evidenceEdit, nameEdit, noEdit, statementEdit, submitBtn, suspectEdit, timeEdit, txtArea,
          txtDate, txtEmail, txtEvidence, txtName, txtNo, txtStatement, txtSuspect, txtTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
