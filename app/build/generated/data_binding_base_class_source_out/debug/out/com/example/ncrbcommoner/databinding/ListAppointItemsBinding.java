// Generated by view binder compiler. Do not edit!
package com.example.ncrbcommoner.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ncrbcommoner.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListAppointItemsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView namebox;

  @NonNull
  public final RelativeLayout relativeLayout2;

  @NonNull
  public final TextView status;

  @NonNull
  public final TextView textViewstatus;

  @NonNull
  public final TextView textViewuser;

  @NonNull
  public final TextView textcommname;

  @NonNull
  public final TextView user;

  private ListAppointItemsBinding(@NonNull RelativeLayout rootView, @NonNull TextView namebox,
      @NonNull RelativeLayout relativeLayout2, @NonNull TextView status,
      @NonNull TextView textViewstatus, @NonNull TextView textViewuser,
      @NonNull TextView textcommname, @NonNull TextView user) {
    this.rootView = rootView;
    this.namebox = namebox;
    this.relativeLayout2 = relativeLayout2;
    this.status = status;
    this.textViewstatus = textViewstatus;
    this.textViewuser = textViewuser;
    this.textcommname = textcommname;
    this.user = user;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ListAppointItemsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListAppointItemsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_appoint_items, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListAppointItemsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.namebox;
      TextView namebox = ViewBindings.findChildViewById(rootView, id);
      if (namebox == null) {
        break missingId;
      }

      RelativeLayout relativeLayout2 = (RelativeLayout) rootView;

      id = R.id.status;
      TextView status = ViewBindings.findChildViewById(rootView, id);
      if (status == null) {
        break missingId;
      }

      id = R.id.textViewstatus;
      TextView textViewstatus = ViewBindings.findChildViewById(rootView, id);
      if (textViewstatus == null) {
        break missingId;
      }

      id = R.id.textViewuser;
      TextView textViewuser = ViewBindings.findChildViewById(rootView, id);
      if (textViewuser == null) {
        break missingId;
      }

      id = R.id.textcommname;
      TextView textcommname = ViewBindings.findChildViewById(rootView, id);
      if (textcommname == null) {
        break missingId;
      }

      id = R.id.user;
      TextView user = ViewBindings.findChildViewById(rootView, id);
      if (user == null) {
        break missingId;
      }

      return new ListAppointItemsBinding((RelativeLayout) rootView, namebox, relativeLayout2,
          status, textViewstatus, textViewuser, textcommname, user);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
